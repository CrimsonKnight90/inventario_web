name: CI - migrations, seeds, tests

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-migrate:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql+asyncpg://ci_user:ci_pass@127.0.0.1:5432/ci_inventory_db
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ci_user
          POSTGRES_PASSWORD: ci_pass
          POSTGRES_DB: ci_inventory_db
        ports: ["5432:5432"]
        options: >-
          --health-cmd "pg_isready -U ci_user -d ci_inventory_db"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install alembic asyncpg pytest pytest-asyncio httpx

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do pg_isready -h 127.0.0.1 -p 5432 && break || sleep 1; done

      - name: Run alembic migrations
        working-directory: .
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          alembic upgrade head

      - name: Run seed scripts (idempotent)
        working-directory: .
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          python scripts/seed_roles_and_catalogs.py
          python scripts/seed_initial_data.py || true

      - name: Run tests (fast focused)
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          pytest -q tests/test_auth_flow.py tests/test_reservation_integration.py tests/test_end_to_end.py

      - name: Run full test suite
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          pytest -q
